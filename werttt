import React, { useEffect } from "react";
import { AudienceOriginRequest, EndPoints } from "../../../api/audience-origin";
import { useQuery } from "@tanstack/react-query";
import { WppAccordion, WppSpinner, WppTypography } from "@platform-ui-kit/components-library-react";
import { IngestionGrid } from "../IngestionGrid/IngestionGrid";
import SecondDataTable from "./SecondDataTable"; // Import the new component
import styles from "../MetadataIngestion/new-metadata-ingestion-workflow.module.scss";

// ... other code remains unchanged

export const CombinedWeightDiffStep = ({ wave, gcsFileLocation1, gcsFileLocation2, onSuccess }) => {
    const { status, data, error, isFetching } = useCombinedMetadataDiff(gcsFileLocation1, gcsFileLocation2, wave);

    useEffect(() => {
        if (onSuccess) {
            onSuccess(isFetching ? false : !error);
        }
    }, [error, data, isFetching, onSuccess]);

    let addData = [], deleteData = [], modifyData = [];

    if (data) {
        addData = data.data1.sheet.filter(item => item.added);
        deleteData = data.data1.sheet.filter(item => item.deleted);
        modifyData = data.data1.sheet.filter(item => item.modified);
    }

    const getErrorMessage = (error) => {
        return error?.response?.data?.message || error.message || "Something went wrong, please refresh.";
    };

    return (
        <div style={{ overflow: "scroll", height: "100%", width: "100%" }}>
            {isFetching ? (
                <div className={styles.centerContent}>
                    <WppSpinner size="m" />
                </div>
            ) : error || !data ? (
                <div className={styles.centerContent}>
                    <WppTypography>
                        <strong>Warning: </strong>
                        {getErrorMessage(error)}
                    </WppTypography>
                </div>
            ) : (
                <div>
                    <div style={{ margin: "2rem" }}>
                        {data.data1.files[0] && (
                            <div style={{ marginBottom: "0.5rem" }}>
                                <WppTypography type="l-midi">Old File (Processed):</WppTypography>{" "}
                                <WppTypography type="l-body" className={styles.highlightText}>
                                    {getFileName(data.data1.files[0])}
                                </WppTypography>
                            </div>
                        )}
                        {data.data1.files[1] && (
                            <div>
                                <WppTypography type="l-midi">New File (Pre-Processed):</WppTypography>{" "}
                                <WppTypography type="l-body" className={styles.highlightText}>
                                    {getFileName(data.data1.files[1])}
                                </WppTypography>
                            </div>
                        )}
                    </div>
                    <div style={{ marginTop: "1rem", marginLeft: "2rem", marginRight: "3rem" }}>
                        <div style={{ marginBottom: '20px' }}>
                            <WppAccordion size="m">
                                <WppTypography type="m-strong" slot="header">Added</WppTypography>
                                <IngestionGrid columns={columnDefsAdded} data={addData} status={status} />
                            </WppAccordion>
                        </div>
                        <div style={{ marginBottom: '20px' }}>
                            <WppAccordion size="m">
                                <WppTypography type="m-strong" slot="header">Modified</WppTypography>
                                <IngestionGrid columns={columnDefsModified} data={modifyData} status={status} />
                            </WppAccordion>
                        </div>
                        <div style={{ marginBottom: '20px' }}>
                            <WppAccordion size="m">
                                <WppTypography type="m-strong" slot="header">Deleted</WppTypography>
                                <IngestionGrid columns={columnDefsDeleted} data={deleteData} status={status} />
                            </WppAccordion>
                        </div>
                    </div>
                    {/* Use the SecondDataTable component and pass the second data */}
                    <SecondDataTable secondData={data.data2} /> {/* Pass second data */}
                </div>
            )}
        </div>
    );
};
